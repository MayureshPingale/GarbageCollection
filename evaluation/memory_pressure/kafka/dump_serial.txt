[0.004s][info][gc] Using Serial
Class name: org.dacapo.harness.Kafka
Configurations:
short     Apache Kafka® is a distributed streaming platform.
long      Apache Kafka® aims to provide a unified, high-throughput, low-latency platform for handling real-time data feeds.
author    Apache Software Foundation
license   Apache License, Version 2.0
copyright Copyright (c) Apache Software Foundation
url       https://kafka.apache.org/
version   kafka 3.3.1
sizes     default large small
Using scaled threading model. 10 processors detected, 10 threads used to drive the workload, in a possible range of [1,unlimited]
Version: kafka 3.3.1

Nominal statistics
Key Score  Rank Value Description
AOA:    4 11/18    54 nominal average object size (bytes)
AOL:    4 12/18    48 nominal 90-percentile object size (bytes)
AOM:    9  3/18    32 nominal median object size (bytes)
AOS:    3 14/18    16 nominal 10-percentile object size (bytes)
ARA:    2 15/18   595 nominal allocation rate (bytes / usec) (3026868936/5085700.0)
BAL:    2 16/19     1 nominal aaload per usec
BAS:    4 12/19     0 nominal aastore per usec
BEF:    3 14/19     3 nominal execution focus / dominance of hot code
BGF:    2 17/19    92 nominal getfield per usec
BPF:    2 16/19    25 nominal putfield per usec
BUB:    8  4/19   128 nominal thousands of unique bytecodes executed
BUF:    8  4/19    21 nominal thousands of unique function calls
GCA:    3 17/22    87 nominal average post-GC heap size as percent of min heap, when run at 2X min heap with G1 (172/196)
GCC:    2 19/22   247 nominal GC count at 2X heap size (G1)
GCM:    4 14/22    87 nominal median post-GC heap size as percent of min heap, when run at 2X min heap with G1 (171/196)
GCP:    1 21/22     0 nominal percentage of time spent in GC pauses at 2X heap size (G1) (450/55640)
GLK:    5 12/22     0 nominal percent 10th iteration memory leakage (10 iterations / 1 iterations) (196/196)
GMD:    9  3/22   191 nominal minimum heap size (MB) for default size configuration (with compressed pointers)
GML:    7  6/18   305 nominal minimum heap size (MB) for large size configuration (with compressed pointers)
GMS:   10  1/22   157 nominal minimum heap size (MB) for small size configuration (with compressed pointers)
GMU:    9  4/22   203 nominal minimum heap size (MB) for default size without compressed pointers
GSS:    1 21/22     0 nominal heap size sensitivity (slowdown with tight heap, as a percentage) (5099/5085.7)
GTO:    3 14/18    14 nominal memory turnover (total alloc bytes / min heap bytes)
PET:    9  3/22     6 nominal execution time (sec)
PKP:   10  2/22    31 nominal percentage of time spent in kernel mode (as percentage of user plus kernel time)
PPE:    1 20/22     3 nominal parallel efficiency (speedup as percentage of ideal speedup for 32 threads)
PSD:    8  6/22     1 nominal standard deviation among invocations at peak performance (as percentage of performance)
PWU:    7  7/22     5 nominal iterations to warm up to within 1.5% of best

Initializing callback
Starting Zookeeper...
Starting Kafka Server...
[0.752s][info][gc] GC(0) Pause Full (Metadata GC Threshold) 87M->8M(494M) 14.802ms
[1.141s][info][gc] GC(1) Pause Young (Allocation Failure) 85M->10M(494M) 2.802ms
[1.175s][info][gc] GC(2) Pause Young (Allocation Failure) 146M->138M(494M) 14.353ms
[1.253s][info][gc] GC(3) Pause Full (Metadata GC Threshold) 162M->139M(494M) 16.497ms
[1.404s][info][gc] GC(4) Pause Full (System.gc()) 171M->141M(494M) 17.736ms
===== DaCapo unknown kafka starting =====
Trogdor is running the workload....
[1.988s][info][gc] GC(5) Pause Young (Allocation Failure) 278M->154M(494M) 9.837ms
Starting 1000000 requests...
[2.737s][info][gc] GC(6) Pause Young (Allocation Failure) 290M->173M(494M) 21.219ms
5%[2.906s][info][gc] GC(7) Pause Young (Allocation Failure) 310M->178M(494M) 7.568ms
10%[3.200s][info][gc] GC(8) Pause Young (Allocation Failure) 314M->178M(494M) 2.660ms
15%20%[3.504s][info][gc] GC(9) Pause Young (Allocation Failure) 314M->178M(494M) 2.690ms
[3.656s][info][gc] GC(10) Pause Full (Metadata GC Threshold) 208M->176M(494M) 59.425ms
25%[3.898s][info][gc] GC(11) Pause Young (Allocation Failure) 312M->177M(494M) 1.833ms
30%35%[4.207s][info][gc] GC(12) Pause Young (Allocation Failure) 314M->177M(494M) 1.616ms
40%[4.508s][info][gc] GC(13) Pause Young (Allocation Failure) 313M->177M(494M) 1.913ms
45%[4.892s][info][gc] GC(14) Pause Young (Allocation Failure) 313M->177M(494M) 2.327ms
50%[5.196s][info][gc] GC(15) Pause Young (Allocation Failure) 313M->177M(494M) 2.874ms
55%60%[5.499s][info][gc] GC(16) Pause Young (Allocation Failure) 314M->177M(494M) 2.891ms
65%[5.796s][info][gc] GC(17) Pause Young (Allocation Failure) 314M->178M(494M) 2.881ms
70%[6.106s][info][gc] GC(18) Pause Young (Allocation Failure) 314M->177M(494M) 3.183ms
75%[6.407s][info][gc] GC(19) Pause Young (Allocation Failure) 314M->178M(494M) 3.309ms
80%85%[6.704s][info][gc] GC(20) Pause Young (Allocation Failure) 314M->177M(494M) 3.139ms
90%[7.005s][info][gc] GC(21) Pause Young (Allocation Failure) 314M->177M(494M) 3.307ms
95%[7.308s][info][gc] GC(22) Pause Young (Allocation Failure) 314M->178M(494M) 2.641ms
100%
Completed requests
Finished
===== DaCapo unknown kafka PASSED in 6017 msec =====
===== DaCapo simple tail latency: 50% 2069 usec, 90% 15154 usec, 99% 88540 usec, 99.9% 90189 usec, 99.99% 90745 usec, max 91121 usec, measured over 1000000 events =====
[7.609s][info][gc] GC(23) Pause Young (Allocation Failure) 314M->185M(494M) 2.611ms
===== DaCapo metered tail latency: 50% 3647 usec, 90% 50666 usec, 99% 89483 usec, 99.9% 96569 usec, 99.99% 97930 usec, max 98335 usec, measured over 1000000 events =====
runAgain
