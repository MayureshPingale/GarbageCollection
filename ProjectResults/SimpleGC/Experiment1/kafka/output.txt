map@map-VirtualBox:~/Documents/Benchmarks/dacapo-23.11-chopin$ ../../epsilon-jdk/build/linux-x86_64-server-fastdebug/images/jdk/bin/java -Xlog:gc -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC -XX:+EpsilonSlidingGC -jar dacapo-23.11-chopin.jar kafka -v -p -d --latency-csv
[0.008s][info][gc] Using Epsilon
[0.008s][warning][gc,init] Consider setting -Xms equal to -Xmx to avoid resizing hiccups
[0.008s][warning][gc,init] Consider enabling -XX:+AlwaysPreTouch to avoid memory commit hiccups
Class name: org.dacapo.harness.Kafka
Configurations:
short     Apache Kafka® is a distributed streaming platform.
long      Apache Kafka® aims to provide a unified, high-throughput, low-latency platform for handling real-time data feeds.
author    Apache Software Foundation
license   Apache License, Version 2.0
copyright Copyright (c) Apache Software Foundation
url       https://kafka.apache.org/
version   kafka 3.3.1
sizes     default large small
Using scaled threading model. 10 processors detected, 10 threads used to drive the workload, in a possible range of [1,unlimited]
Version: kafka 3.3.1

Nominal statistics
Key Score  Rank Value Description
AOA:    4 11/18    54 nominal average object size (bytes)
AOL:    4 12/18    48 nominal 90-percentile object size (bytes)
AOM:    9  3/18    32 nominal median object size (bytes)
AOS:    3 14/18    16 nominal 10-percentile object size (bytes)
ARA:    2 15/18   595 nominal allocation rate (bytes / usec) (3026868936/5085700.0)
BAL:    2 16/19     1 nominal aaload per usec
BAS:    4 12/19     0 nominal aastore per usec
BEF:    3 14/19     3 nominal execution focus / dominance of hot code
BGF:    2 17/19    92 nominal getfield per usec
BPF:    2 16/19    25 nominal putfield per usec
BUB:    8  4/19   128 nominal thousands of unique bytecodes executed
BUF:    8  4/19    21 nominal thousands of unique function calls
GCA:    3 17/22    87 nominal average post-GC heap size as percent of min heap, when run at 2X min heap with G1 (172/196)
GCC:    2 19/22   247 nominal GC count at 2X heap size (G1)
GCM:    4 14/22    87 nominal median post-GC heap size as percent of min heap, when run at 2X min heap with G1 (171/196)
GCP:    1 21/22     0 nominal percentage of time spent in GC pauses at 2X heap size (G1) (450/55640)
GLK:    5 12/22     0 nominal percent 10th iteration memory leakage (10 iterations / 1 iterations) (196/196)
GMD:    9  3/22   191 nominal minimum heap size (MB) for default size configuration (with compressed pointers)
GML:    7  6/18   305 nominal minimum heap size (MB) for large size configuration (with compressed pointers)
GMS:   10  1/22   157 nominal minimum heap size (MB) for small size configuration (with compressed pointers)
GMU:    9  4/22   203 nominal minimum heap size (MB) for default size without compressed pointers
GSS:    1 21/22     0 nominal heap size sensitivity (slowdown with tight heap, as a percentage) (5099/5085.7)
GTO:    3 14/18    14 nominal memory turnover (total alloc bytes / min heap bytes)
PET:    9  3/22     6 nominal execution time (sec)
PKP:   10  2/22    31 nominal percentage of time spent in kernel mode (as percentage of user plus kernel time)
PPE:    1 20/22     3 nominal parallel efficiency (speedup as percentage of ideal speedup for 32 threads)
PSD:    8  6/22     1 nominal standard deviation among invocations at peak performance (as percentage of performance)
PWU:    7  7/22     5 nominal iterations to warm up to within 1.5% of best

Initializing callback
Starting Zookeeper...
Starting Kafka Server...
[3.290s][info   ][gc     ] GC request for "Metadata GC Threshold" is handled
[3.940s][info   ][gc     ] Heap: 2435M reserved, 280M (11.51%) committed, 209M (8.61%) used
[5.508s][info   ][gc     ] GC(0) Step 0: Prologue 0.622ms
[5.539s][info   ][gc     ] GC(0) Step 1: Mark 31.531ms
[5.555s][info   ][gc     ] GC(0) Step 2: Calculate new locations 15.665ms
[5.607s][info   ][gc     ] GC(0) Step 3: Adjust pointers 51.800ms
[5.628s][info   ][gc     ] GC(0) Step 4: Move objects 20.722ms
[5.628s][info   ][gc     ] GC(0) Step 5: Epilogue 0.314ms
[5.628s][info   ][gc     ] GC(0) GC Stats: 22134 (9.31%) reachable from roots, 215710 (90.69%) reachable from heap, 192118 (80.77%) moved, 5642 (2.37%) markwords preserved
[5.628s][info   ][gc     ] GC(0) Heap: 2435M reserved, 280M (11.51%) committed, 141M (5.82%) used
[5.628s][info   ][gc     ] GC(0) Lisp2-style Mark-Compact (System.gc()) 237M->141M(280M) 121.234ms
[5.629s][info   ][gc     ] Heap: 2435M reserved, 280M (11.51%) committed, 142M (5.83%) used
===== DaCapo 23.11-chopin kafka starting =====
Trogdor is running the workload....
[6.653s][info   ][gc     ] GC request for "Metadata GC Threshold" is handled
[15.894s][info   ][gc     ] Heap: 2435M reserved, 280M (11.51%) committed, 263M (10.84%) used
Starting 1000000 requests...
[22.394s][info   ][gc     ] Heap: 2435M reserved, 408M (16.76%) committed, 385M (15.84%) used
[23.905s][info   ][gc     ] Heap: 2435M reserved, 536M (22.02%) committed, 507M (20.86%) used
10%[24.773s][info   ][gc     ] Heap: 2435M reserved, 664M (27.28%) committed, 629M (25.86%) used
15%[25.750s][info   ][gc     ] Heap: 2435M reserved, 792M (32.53%) committed, 751M (30.87%) used
20%[26.563s][info   ][gc     ] Heap: 2435M reserved, 920M (37.79%) committed, 873M (35.87%) used
25%[27.334s][info   ][gc     ] Heap: 2435M reserved, 1048M (43.05%) committed, 995M (40.88%) used
30%[28.184s][info   ][gc     ] Heap: 2435M reserved, 1176M (48.30%) committed, 1117M (45.88%) used
40%[28.765s][info   ][gc     ] Heap: 2435M reserved, 1304M (53.56%) committed, 1239M (50.89%) used
45%[29.389s][info   ][gc     ] Heap: 2435M reserved, 1432M (58.82%) committed, 1361M (55.90%) used
50%[29.868s][info   ][gc     ] Heap: 2435M reserved, 1560M (64.07%) committed, 1482M (60.90%) used
55%[30.789s][info   ][gc     ] Heap: 2435M reserved, 1688M (69.33%) committed, 1604M (65.90%) used
60%[31.859s][info   ][gc     ] Heap: 2435M reserved, 1816M (74.59%) committed, 1726M (70.91%) used
70%[35.394s][info   ][gc     ] Heap: 2435M reserved, 1944M (79.84%) committed, 1848M (75.92%) used
75%[36.912s][info   ][gc     ] Heap: 2435M reserved, 2072M (85.10%) committed, 1970M (80.93%) used
80%[37.841s][info   ][gc     ] Heap: 2435M reserved, 2200M (90.36%) committed, 2092M (85.93%) used
85%[38.485s][info   ][gc     ] Heap: 2435M reserved, 2328M (95.61%) committed, 2214M (90.93%) used
95%[39.215s][info   ][gc     ] Heap: 2435M reserved, 2435M (100.00%) committed, 2336M (95.94%) used
100%
Completed requests
Finished
===== DaCapo 23.11-chopin kafka PASSED in 34384 msec =====
[40.460s][info   ][gc     ] GC(1) Step 0: Prologue 0.372ms
[40.558s][info   ][gc     ] GC(1) Step 1: Mark 97.850ms
[40.583s][info   ][gc     ] GC(1) Step 2: Calculate new locations 24.944ms
[40.678s][info   ][gc     ] GC(1) Step 3: Adjust pointers 94.687ms
[40.720s][info   ][gc     ] GC(1) Step 4: Move objects 41.451ms
[40.720s][info   ][gc     ] GC(1) Step 5: Epilogue 0.668ms
[40.720s][info   ][gc     ] GC(1) GC Stats: 46980 (9.77%) reachable from roots, 433867 (90.23%) reachable from heap, 409450 (85.15%) moved, 13566 (2.82%) markwords preserved
[40.720s][info   ][gc     ] GC(1) Heap: 2435M reserved, 2435M (100.00%) committed, 193M (7.95%) used
[40.720s][info   ][gc     ] GC(1) Lisp2-style Mark-Compact (Allocation Failure) 2432M->193M(2435M) 260.531ms
[40.721s][info   ][gc     ] Heap: 2435M reserved, 2435M (100.00%) committed, 193M (7.95%) used
===== DaCapo simple tail latency: 50% 883654 usec, 90% 1620676 usec, 99% 3844700 usec, 99.9% 4357050 usec, 99.99% 4393359 usec, max 4419283 usec, measured over 1000000 events =====
===== DaCapo metered tail latency: 50% 1914334 usec, 90% 2920987 usec, 99% 3844700 usec, 99.9% 4357050 usec, 99.99% 4393359 usec, max 4419283 usec, measured over 1000000 events =====
runAgain
[46.347s][info   ][gc     ] Heap: 2435M reserved, 2435M (100.00%) committed, 299M (12.30%) used

